name: GuardDog Full Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  guarddog:
    name: GuardDog - Full Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install GuardDog
        run: pip install guarddog

      - name: Create custom temp directory
        run: mkdir -p ${{ github.workspace }}/guarddog-tmp

      - name: Set TMPDIR
        run: echo "TMPDIR=${{ github.workspace }}/guarddog-tmp" >> $GITHUB_ENV

      - name: üê∂ Local files scan
        id: local_scan
        continue-on-error: true
        run: |
          guarddog npm scan . --output-format json > guarddog_local.json 2>&1
          cat guarddog_local.json

      - name: üîç Dependency scan (package.json)
        id: deps_scan
        continue-on-error: true
        run: |
          guarddog npm verify ./package.json --output-format json > guarddog_deps.json 2>&1
          cat guarddog_deps.json

      - name: üì¶ Upload GuardDog outputs
        uses: actions/upload-artifact@v4
        with:
          name: guarddog-results
          path: |
            guarddog_local.json
            guarddog_deps.json

      - name: ‚ùó Final check for findings
        run: |
          local_issues=$(jq '[.results[] | select(length > 0)] | length' guarddog_local.json)
          dep_issues=$(jq '[.results[] | select(length > 0)] | length' guarddog_deps.json)

          echo "Local scan findings: $local_issues"
          echo "Dependency scan findings: $dep_issues"

          if [ "$local_issues" -gt 0 ] || [ "$dep_issues" -gt 0 ]; then
            echo "‚ùå GuardDog found issues"
            exit 1
          else
            echo "‚úÖ GuardDog found no issues"
          fi
